---
# file: ansible-role-prometheus/tasks/main.yaml

- import_role:
    name: ansible-role-reverse-proxy
  vars:
    nginx_proxy_pass: http://{{ prometheus_container_name }}:9090
    nginx_data_dir: /opt/nginx-prometheus-proxy
    nginx_container_port: 8443:443
    nginx_container_name: nginx-prometheus-proxy
    nginx_container_network: "{{ prometheus_container_network }}"
    allowedHosts: ['all']
  become: true

- name: Create {{ prometheus_data_dir }}
  file:
    path: "{{ prometheus_data_dir }}"
    state: directory
    mode: 0777

- name: Generate prometheus config
  template:
    src: prometheus.j2
    dest: "{{ prometheus_data_dir }}/prometheus.yml"
    mode: 0644
    force: yes
    backup: yes
  register: prometheus_config

- name: Create {{ prometheus_data_dir }}/rules
  file:
    path: "{{ prometheus_data_dir }}/rules"
    state: directory
    mode: 0777

- name: Copy default alerts
  copy:
    src: default.rules
    dest: "{{ prometheus_data_dir }}/rules/default.rules"
    mode: 0644
    force: yes
    backup: yes
  register: prometheus_rules
 
- name: Create docker network
  shell: "docker network create {{ prometheus_container_network }} || true"

- name: Check if prometheus docker container is running
  shell: docker ps | grep {{ prometheus_container_name }}
  register: container_running
  changed_when: false
  ignore_errors: yes

- name: Check if prometheus docker container exist
  command: docker inspect {{ prometheus_container_name }}
  register: container_exist
  changed_when: false
  ignore_errors: yes

- name: Get Prometheus docker image
  shell: docker pull prom/prometheus
  when: not container_exist.rc == 0

- name: Run Prometheus docker container
  shell: docker run --name {{ prometheus_container_name }} --net {{ prometheus_container_network }} -v {{ prometheus_data_dir }}:/prometheus --restart unless-stopped --detach prom/prometheus --config.file=/prometheus/prometheus.yml --web.external-url=http://{{ inventory_hostname }} --web.route-prefix="/"
  when: not container_exist.rc == 0

- name: Start existing Prometheus docker container
  shell: docker start {{ prometheus_container_name }}
  when: container_exist.rc == 0 and not container_running.rc == 0
  
- name: Restart Prometheus container if config changed
  shell: docker restart {{ prometheus_container_name }}
  when: prometheus_config.changed or prometheus_rules.changed
