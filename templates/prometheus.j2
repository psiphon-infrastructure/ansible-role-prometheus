global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

alerting:
  alertmanagers:
  - scheme: https
    path_prefix: /alertmanager
    static_configs:
    - targets:
      {% for host in groups['prometheus_alertmanagers'] %}
      - {{ host }}:443
      {% endfor %}

    tls_config:
      #ca_file: /prometheus/certs/ca.crt
      #cert_file: /prometheus/prom_server.crt
      #key_file: /prometheus/prom_server_nopass.key
      insecure_skip_verify: true

rule_files:
  - "rules/*.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'infrastructure'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    metrics_path: '/node_exporter/metrics'
    static_configs:
    - targets: [{% for host in groups[prometheus_target_servers] %} '{{ host }}:443', {% endfor %}]
    scheme: https
    tls_config:
      #ca_file: /prometheus/ca.crt
      #cert_file: /prometheus/prom_server.crt
      #key_file: /prometheus/prom_server_nopass.key
      #server_name: server 
      insecure_skip_verify: true

  - job_name: 'prometheus'
    metrics_path: '/prometheus/metrics'
    static_configs:
      - targets: ['localhost:9090']

